// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'PYREVAL_TEST_DB';
// Create a new database or point to the database
use(database);

//Show all databases
show dbs;

// Create a new collection.
const collection = 'STUDENT_ESSAYS_COLLECTION';
db.createCollection(collection);

db.STUDENT_ESSAYS_COLLECTION.insertMany([
  { 
  'student_id': 1, 
  'essay': "TestEssay1"},

]);

// db.STUDENT_ESSAYS_COLLECTION.drop();
// const collection = 'STUDENT_ESSAYS_COLLECTION';
// db.createCollection(collection);

// //Inserting nested document into the collection

// {
//  'student_metadata': 
//  {
//     'student_id' : 1,
//     'class_id' : 1,
//     'teacher_id': 1,
//     'essay_number': 1,
//     'essay_version': 1

//  },
//  'essay_text': '',
//  'timestamp': 1234,
// }

// {
//   'essay_number': 1,
//   'pyramid_id': 1
// }



// {
//   'pyramid_id': 1,
//   'pyramid_name': 'Pyramid_7/21/2022',
//   'pyr_file_content': '',
//   'size_file_content': '',
//   'human_readable_pyramid_content': ''
// }



db.STUDENT_ESSAYS_COLLECTION.insertMany(
   [ 
    {
      student_metadata: 
      {
          student_id : 1,
          class_id : 1,
          teacher_id : 1,
          essay_number : 2,
          essay_version : 1

      },
      essay_text: 'This is a temporary text for Student1'
    },
    {
      student_metadata: 
      {
          student_id : 2,
          class_id : 1,
          teacher_id : 1,
          timestamp : 1234,
          essay_number : 2,
          essay_version : 1

      },
      essay_text : 'This is a temporary text for Student1'
    },
    {
      student_metadata: 
      {
          student_id : 3,
          class_id : 2,
          teacher_id : 1,
          essay_number : 3,
          essay_version : 1

      },
      essay_text: 'This is a temporary text for Student1'
    }
   ]
)



//Get all records
db.STUDENT_ESSAYS_COLLECTION.find();

// db.inventory.find( { size: { h: 14, w: 21, uom: "cm" } } )
//Get specific with student metadata

db.STUDENT_ESSAYS_COLLECTION.find(
  {student_metadata:
    {
      student_id : 1,
      class_id : 1,
      teacher_id : 1,
      timestamp : 1234,
      essay_number : 1,
      essay_version : 1
    }
  }
)


db.STUDENT_ESSAYS_COLLECTION.find(
                {
                "student_metadata.student_id":1,
                "student_metadata.class_id":1,
                "student_metadata.teacher_id":1,
                "student_metadata.timestamp":1234,
                "student_metadata.essay_number":1,
                "student_metadata.essay_version":1
                }
            )

db.getCollectionNames()

const collection = 'ESSAY_PYRAMID_COLLECTION';
db.createCollection(collection);

db.ESSAY_PYRAMID_COLLECTION.insertMany([
  {
    'essay_number': 1,
    'pyramid_id': 1
  },
  {
    'essay_number': 2,
    'pyramid_id': 2
  },
  {
    'essay_number': 3,
    'pyramid_id': 2
  }
])

const collection = 'PYRAMID_COLLECTION';
db.createCollection(collection);

db.PYRAMID_COLLECTION.insertMany([
  {
  'pyramid_id': 1,
  'pyramid_name': 'Pyramid_7/21/2022',
  'pyr_file_content': '',
  'size_file_content': '',
  'human_readable_pyramid_content': ''
  }
])

db.STUDENT_ESSAYS_COLLECTION.update(
  {
  "student_metadata.student_id":1,
  "student_metadata.class_id":1,
  "student_metadata.teacher_id":1,
  "student_metadata.timestamp":1234,
  "student_metadata.essay_number":1,
  "student_metadata.essay_version":1
  },
  {
    $set: {
      essay_text: "I also think the mass of the car should be kilograms because it gives J of potential energy at the top and J of kinetic energy as it is in motion.The masses that are less than kg all had less potential and kinetic energy so they wouldn't make it as far as the kg car and when you add loops and hills you need as much kinetic energy as you can get so that the car will make it to the end.",
    }
  }
)


db.PYRAMID_COLLECTION.update(
  {
  'pyramid_id': 2  
  },
  {
    $set:{
        'pyr_file_content': '',
        'size_file_content': '',
    }
  }

)

db.ESSAY_PYRAMID_COLLECTION.update(
  {
  'essay_number': 1
  },
  {
    $set:{
        'pyramid_id': '2',
    }
  }

)


const collection = 'DEBUG_DATA_COLLECTION';
db.createCollection(collection);


db.DEBUG_DATA_COLLECTION.insertMany(
  { 
  'student_id': "", 

  'Message':"" 
  },
  'student_metadata': 
  {
      'student_id' : 1,
      'class_id' : 1,
      'teacher_id': 1,
      'essay_number': 1,
      'essay_version': 1
  },
  'intermmediate_data':
  {
    'split_file_content': "",
    'xml_file_content': "",
    'seg_file_content': "",
    'vector_file_content': "",
    'temp_file_content': ""
  }
  'stage_logs':
  {
    'stanford_core_nlp_stage' : '',
    'seg_file_creation_stage' : '',
    'ls_file_creation_stage' : '',
    'pyramid_creation_stage' : '',
    'temp_segs_creation_stage' : '',
    'scoring_stage' : ''
  }
);
