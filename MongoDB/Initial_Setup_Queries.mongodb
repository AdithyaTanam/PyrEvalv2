//Created by: Adithya Tanam
//Initial Queries and Steps to setup MongoDB for PyrEval

//Install MongoDB and MongoDB Compass


//Method 1:
// --Open the Dump_Files folder in the terminal and run the below command

mongorestore dump


//Method 2:

//Enter MongoDB shell with the terminal/command prompt and type "mongo sh"

//Verify by running the below query, we will be able to see all the existing databases
show dbs;

//Creating a new database -- The database will be removed if no collections are created
use('PYREVAL_TEST_DB');

//Show all databases
show dbs;

// Create the STUDENT_ESSAYS_COLLECTION.
db.createCollection('STUDENT_ESSAYS_COLLECTION');

// Create the ESSAY_PYRAMID_COLLECTION.
db.createCollection('ESSAY_PYRAMID_COLLECTION');

//Create the PYRAMID_COLLECTION
db.createCollection('PYRAMID_COLLECTION');

//Create the DEBUG_DATA_COLLECTION
db.createCollection('DEBUG_DATA_COLLECTION');


//Inserting initial data into the ESSAY_PYRAMID_COLLECTION to connect essay number with pyramid ids
db.ESSAY_PYRAMID_COLLECTION.insertMany([
  {
    'essay_number': 1,
    'pyramid_id': 1
  },
  {
    'essay_number': 2,
    'pyramid_id': 2
  },
  {
    'essay_number': 3,
    'pyramid_id': 2
  }
])

//Inserting data into the STUDENT_ESSAYS_COLLECTION and PYRAMID_COLLECTION

// -- We can use compass for this operation. Locate the 'PYREVAL_TEST_DB' collection on Compass and 
// -- click on the collection to which data has to be imported.
// -- Use the Add Data functionality and select the JSON files present in the data_json_files of the Mongo Folder.

//We need not insert data into DEBUG_DATA_COLLECTION as this is dynamically generated.

//----------------------------------------------------------------------------------------

//Running PyrEval manually for New student data and Pyramids

//-- To insert new pyramids there are two methods,
//-- Method 1: Use the below query and replace the hrp_file_content with the file content and run the query

db.PYRAMID_COLLECTION.insertMany([
  {
  'pyramid_id': <pyramid_id>,
  'pyramid_name': <pyramid_name>,
  'pyr_file_content': '',//This can be left empty as this will be generated by PyrEval
  'size_file_content': '',//This can be left empty as this will be generated by PyrEval
  'human_readable_pyramid_content': '' //Paste the Human Readable file content in this field
  }
])

//-- Method 2: You can place the Human Readable Pyramid File in the HRP_Files folder in MongoDB folder and use the script "populate_pyramid_table_mongo_new.py"
//-- Before executing the script change the values in the script according to the new Pyramid and location of Human Readable Pyramid.


//To insert student data, you can use the below query or Compass and you can fill the fields accordingly,

db.STUDENT_ESSAYS_COLLECTION.insertMany(
   [ 
    {
      student_metadata: 
      {
          student_id : <student_id>,
          class_id : <class_id>,
          teacher_id : <teacher_id>,
          essay_number : <essay_number>,
          essay_version : <essay_version>

      },
      essay_text: 'This is a temporary text for Student1'
    }]


// Before running PyrEval we need to make sure ESSAY_PYRAMID_COLLECTION has the entries between new essay_number and new pyramid_id

db.ESSAY_PYRAMID_COLLECTION.insertMany([
  {
    'essay_number': <new_essay_number>,
    'pyramid_id': <new_pyramid_id>
  }
])

// Post this data is inserted we can use pyreval_mongo_launcher.py and change the metadata(In the student object) in the script according to the new entries and run the script


///-------------------------------------------------------------------------------------------------------------------------------------------///

//-----------Misc: Query to insert data into DEBUG_DATA_COLLECTION

db.DEBUG_DATA_COLLECTION.insertMany(
  { 
  'student_id': "", 

  'Message':"" 
  },
  'student_metadata': 
  {
      'student_id' : 1,
      'class_id' : 1,
      'teacher_id': 1,
      'essay_number': 1,
      'essay_version': 1
  },
  'intermmediate_data':
  {
    'split_file_content': "",
    'xml_file_content': "",
    'seg_file_content': "",
    'vector_file_content': "",
    'temp_file_content': ""
  }
  'stage_logs':
  {
    'stanford_core_nlp_stage' : '',
    'seg_file_creation_stage' : '',
    'ls_file_creation_stage' : '',
    'pyramid_creation_stage' : '',
    'temp_segs_creation_stage' : '',
    'scoring_stage' : ''
  }
);
